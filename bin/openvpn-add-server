#!/bin/sh
## INSTALL docker.openvpn.server

. /etc/profile
oe_setup_addon docker.openvpn.server

DOCKERIMAGE="nvdias/rpi-openvpn"
OVPN_DATA=/storage/.kodi/userdata/addon_data/docker.openvpn.server

mkdir -p $OVPN_DATA


if [ "$OVPN_SERVER" == "" ]; then
  echo "Server not configured"
  echo "a) Configure OpenVPN server name in kodi to use the addon."
  echo "b) Run this script again to create the server"
  exit
fi

echo "
Using $OVPN_SERVER server name

This script will configure an openvpn server - run just once
Press a key to continue"

read

#Download image and run first config
echo "Download docker image"
docker run -v $OVPN_DATA:/etc/openvpn --rm $DOCKERIMAGE ovpn_genconfig -u udp://$OVPN_SERVER

# The container will prompt for a passphrase to store the private key used by the certificate authority.
#docker volume create --name $OVPN_DATA

# Create config:
docker run -v $OVPN_DATA:/etc/openvpn --rm $DOCKERIMAGE ovpn_genconfig -u udp://$OVPN_SERVER

# Give access to LAN from VPN
echo "

Updating OpenVPN configuration to alllow LAN access from VPN clients.

What is your local DNS ? (ex: 192.168.0.1)"
read LOCAL_DNS_SERVER
if [ "$LOCAL_DNS_SERVER" != "" ]; then
	if [ "$(grep $LOCAL_DNS_SERVER $OVPN_DATA/openvpn.conf)" == "" ]; then
	  echo 
	  echo "Updating configuration file with your Local dns server"
	  echo "push \"dhcp-option DNS $LOCAL_DNS_SERVER\"" >> $OVPN_DATA/openvpn.conf
	fi
fi

  
# Create keys (generation will take around 8 minutes in a Raspberry Pi 4):
echo "
***********************************************************
Keys will now be created.
IT IS A VERY SLOW PROCESS
(takes up to 15 minutes to generate with a Raspberry Pi 4)

PLEASE BE PATIENT ...
***********************************************************
"
docker run -v $OVPN_DATA:/etc/openvpn --rm -it $DOCKERIMAGE ovpn_initpki


echo "
- Server is setup.
  Configuration files are stored in:
  $OVPN_DATA

- Restart the service in kodi add-ons control

- Add users to the server with:
  openvpn-add-user
"
